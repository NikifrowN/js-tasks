//==== Task-1 ===================
// Что выведет следующий код?

let fruits = ["Яблоки", "Груша", "Апельсин"];

// добавляем новое значение в "копию"
let shoppingCart = fruits;
shoppingCart.push("Банан");

// что в fruits?
alert( fruits.length ); // 4

//==== Task-2 ===================
// Давайте произведём 5 операций с массивом.

// Создайте массив styles с элементами «Джаз» и «Блюз».
let styles = ['Джаз', 'Блюз'];
// Добавьте «Рок-н-ролл» в конец.
styles.push('Рок-н-ролл');
// Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
styles[Math.floor((styles.length - 1) / 2)] = "Классика";
// Удалите первый элемент массива и покажите его.
console.log(styles.shift());
// Вставьте Рэп и Регги в начало массива.
styles.unshift('Рэп', 'Регги');

//==== Task-3 ===================
// Каков результат? Почему?

let arr = ["a", "b"];

arr.push(function() {
   alert( this );
});

arr[2](); // a, b, function(){...}


//==== Task-5 ===================
//Напишите функцию sumInput(), которая:

// Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
// Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, пустую строку или нажмёт «Отмена».
// Подсчитывает и возвращает сумму элементов массива.
// P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

function getMaxSubSum(arr) {
   let maxSum = 0;

   for (let i = 0; i < arr.length; i++) {
      let sumFixedStart = 0;
      for (let j = i; j < arr.length; j++) {
         sumFixedStart += arr[j];
         maxSum = Math.max(maxSum, sumFixedStart);
      }
   }

   return maxSum;
}

console.log(getMaxSubSum([-1, 2, 3, -9]));